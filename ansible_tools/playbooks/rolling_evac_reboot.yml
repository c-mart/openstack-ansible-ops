---

# Rolling evacuation + reboot for 'zero-downtime' maintenance of compute hosts
# Usage: `openstack-ansible rolling_evac_reboot.yml`

- name: Rolling evacuation and reboot of compute hosts
  hosts: compute_hosts
  any_errors_fatal: true
  serial: 1
  user: root
  vars:
  pre_tasks:
    - name: Evacuate compute host
      shell: >
        . ~/openrc;
        nova host-evacuate-live {{ ansible_fqdn }}
      delegate_to: "{{ groups['utility_all'][0] }}"
      changed_when: false
      tags:
        - evac
    - name: Ensure no active workloads on compute host
      shell: >
        . ~/openrc;
        openstack server list --all-projects --long -f json --host {{ ansible_fqdn }}
      delegate_to: "{{ groups['utility_all'][0] }}"
      register: nova_host_instances
      retries: 10
      delay: 10
      until: "{{ 0 == nova_host_instances.stdout | from_json
                 | rejectattr('Status', 'equalto', 'SHUTOFF')
                 | list | length }}"
      changed_when: false
    - name: Disable nova service
      shell: >
        . ~/openrc;
        nova service-disable --reason "Ansible rolling reboot" {{ ansible_fqdn }} nova-compute
      delegate_to: "{{ groups['utility_all'][0] }}"
      changed_when: false
  tasks:
    - name: Reboot server
      shell: ( sleep 3 && /sbin/reboot & )
      async: 0
      poll: 0
      changed_when: false
      tags:
        - reboot
    - name: Wait a minute to ensure server shuts down before reconnect attempt
      pause:
        minutes: 1
    - name: Wait for server to come back online
      local_action: 'command ssh -o ConnectTimeout=1 {{ ansible_fqdn }} exit'
      register: ssh_attempt
      until: ssh_attempt|success
      retries: 20
      delay: 15
      tags:
        - reboot
  post_tasks:
    - name: Enable nova service
      shell: >
        . ~/openrc;
        nova service-enable {{ ansible_fqdn }} nova-compute
      delegate_to: "{{ groups['utility_all'][0] }}"
      changed_when: false
